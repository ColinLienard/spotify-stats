import Head from "next/head";
import { GetServerSideProps } from "next";
import { FC, useContext, useState } from "react";
import NavBar from "../components/NavBar/NavBar";
import LoadingScreen from "../components/LoadingScreen/LoadingScreen";
import ImageBox from "../components/ImageBox/ImageBox";
import { LangContext } from "../lib/contexts/LangContext";
import styles from "../styles/Home.module.scss";

const Home: FC = () => {
    const [loading, setLoading] = useState(false);
    const { Home: lang } = useContext(LangContext);
    const loginUrl = `https://accounts.spotify.com/authorize?client_id=${process.env.NEXT_PUBLIC_CLIENT_ID}&response_type=code&redirect_uri=${process.env.NEXT_PUBLIC_URL}${lang.current === "FR" ? "/fr" : ""}/stats&scope=user-read-recently-played%20user-top-read%20user-read-email%20user-read-private`;

    const startLoading = () => setLoading(true);

    return (<>
        <Head>
            <title>Create Next App</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
        </Head>
            {loading ?
                <LoadingScreen/>
                :
                null
            }
            <NavBar logged={false} loginUrl={loginUrl} startLoading={startLoading}/>
            <main role="main">
                <section className={styles.topSection}>
                    <div className={styles.content}>
                        <h1 className={styles.hero}>{lang.hero[0]}<br/>{lang.hero[1]}<br/>{lang.hero[2]}</h1>
                        <p className={styles.subhero}>{lang.subhero}</p>
                        <a className={styles.buttonIcon} href={loginUrl} onClick={startLoading}>
                            <svg width="19" height="20" viewBox="0 0 19 20">
                                <path d="M1.07272 0.278809L18.012 9.98115L0.992889 19.7292L1.07272 0.278809ZM3.05861 3.72111L3.0071 16.2707L13.988 9.98115L3.05861 3.72111Z"/>
                            </svg>
                            <p>{lang.login} <span className={styles.green}>Spotify</span></p>
                        </a>
                    </div>
                    <img className={styles.longArrow} src="./images/svg/long-arrow.svg" alt=""/>
                    <div className={styles.radialGradient}/>
                    <div className={styles.favoritesContainer}>
                        <ImageBox className={styles.disc1} src="/images/svg/disc-1.svg" alt=""/>
                        <img className={styles.disc2} src="/images/svg/disc-2.svg" alt=""/>
                        <img className={styles.disc3} src="/images/svg/disc-3.svg" alt=""/>
                        <img className={styles.artist1} src="/images/png/the-weeknd.png" alt=""/>
                        <img className={styles.artist2} src="/images/png/drake.png" alt=""/>
                    </div>
                    <div className={styles.shootingStars}>
                        <img className={styles.shootingStar1} src="/images/svg/shooting-star.svg" alt=""/>
                        <img className={styles.shootingStar2} src="/images/svg/shooting-star.svg" alt=""/>
                        <img className={styles.shootingStar3} src="/images/svg/shooting-star.svg" alt=""/>
                        <img className={styles.shootingStar4} src="/images/svg/shooting-star.svg" alt=""/>
                        <img className={styles.shootingStar5} src="/images/svg/shooting-star.svg" alt=""/>
                    </div>
                </section>
            </main>
    </>)
}

export const getServerSideProps: GetServerSideProps = async ctx => {
    if(ctx.req.cookies.accessToken || ctx.req.cookies.refreshToken) {
        ctx.res.setHeader("Location", "/stats");
        ctx.res.statusCode = 302;
        ctx.res.end();
    }

    return {
        props: {}
    }
}

export default Home;
